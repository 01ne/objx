// Is{0} gets whether the object contained is a {1} or not.
func (o *O) Is{0}() bool {
	return o.IsKind(reflect.{0})
}

// Is{0}Slice gets whether the object contained is a []{1} or not.
func (o *O) Is{0}Slice() bool {
	if !o.IsSlice() {
		return false
	}
	_, ok := o.obj.([]{1})
	return ok
}


TEST:

func TestIs{0}(t *testing.T) {

	var o *O

	o = New({1}(1))
	assert.True(t, o.Is{0}())

	o = New([]{1}{ {1}(1) })
	assert.True(t, o.Is{0}Slice())

}
